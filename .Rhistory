data_full$BsmtQual <- as.numeric(data_full$BsmtQual)
# data_full <- data_full %>%
#   mutate(BsmtQual = ordered(BsmtQual, levels = c("None", 2:5)))
# BsmtCond
data_full$BsmtCond[is.na(data_full$BsmtCond)] <- "0" # "None"
data_full$BsmtCond <- plyr::revalue(data_full$BsmtCond, c("Gd" = "5",
"TA" = "4",
"Fa" = "3",
"Po" = "2"))
data_full$BsmtCond <- as.numeric(data_full$BsmtCond)
# data_full <- data_full %>%
#   mutate(BsmtCond = ordered(BsmtCond, levels = c("None", 2:5)))
# BsmtExposure
data_full$BsmtExposure[is.na(data_full$BsmtExposure)] <- "0" # "None"
data_full$BsmtExposure <- plyr::revalue(data_full$BsmtExposure, c("Gd" = "5",
"Av" = "4",
"Mn" = "3",
"No" = "2"))
data_full$BsmtExposure <- as.numeric(data_full$BsmtExposure)
# data_full <- data_full %>%
#   mutate(BsmtExposure = ordered(BsmtExposure, levels = c("None", 2:5)))
# BsmtFinType1
data_full$BsmtFinType1[is.na(data_full$BsmtFinType1)] <- "None"
data_full$BsmtFinType1 <- as.factor(data_full$BsmtFinType1)
# BsmtFinSF1
data_full$BsmtFinSF1[is.na(data_full$BsmtFinSF1)] <- 0
# BsmtFinType2
data_full$BsmtFinType2[is.na(data_full$BsmtFinType2)] <- "None"
data_full$BsmtFinType2 <- as.factor(data_full$BsmtFinType2)
# BsmtFinSF2
data_full$BsmtFinSF2[is.na(data_full$BsmtFinSF2)] <- 0
# BsmtUnfSF
data_full$BsmtUnfSF[is.na(data_full$BsmtUnfSF)] <- 0
# TotalBsmtSF
data_full$TotalBsmtSF[is.na(data_full$TotalBsmtSF)] <- 0
# Heating
data_full$Heating <- as.factor(data_full$Heating)
# HeatingQC
data_full$HeatingQC <- plyr::revalue(data_full$HeatingQC, c("Ex" = "5",
"Gd" = "4",
"TA" = "3",
"Fa" = "2",
"Po" = "1"))
data_full$HeatingQC <- as.numeric(data_full$HeatingQC)
# data_full <- data_full %>%
#   mutate(HeatingQC = ordered(HeatingQC, levels = c(1:5)))
# CentralAir
data_full$CentralAir <- as.factor(data_full$CentralAir)
# Electrical
data_full$Electrical[is.na(data_full$Electrical)] <- "SBrkr"
data_full$Electrical <- ifelse(data_full$Electrical == "FuseA", "Other",
ifelse(data_full$Electrical == "FuseF", "Other",
ifelse(data_full$Electrical == "FuseP", "Other",
ifelse(data_full$Electrical == "Mix", "Other", "SBrkr"))))
data_full$Electrical <- as.factor(data_full$Electrical)
# FirstFloorSF & SecondFloorSF
data_full <- data_full %>%
rename(FirstFloorSF = X1stFlrSF,
SecondFloorSF = X2ndFlrSF)
data_full$FirstFloorSF <- as.numeric(data_full$FirstFloorSF)
data_full$SecondFloorSF <- as.numeric(data_full$SecondFloorSF)
# LowQualFinSF
data_full$LowQualFinSF <- as.numeric(data_full$LowQualFinSF)
# GrLivArea
data_full$GrLivArea <- as.numeric(data_full$GrLivArea)
# BsmtFullBath
data_full$BsmtFullBath[is.na(data_full$BsmtFull)] <- 0
# BsmtHalfBath
data_full$BsmtHalfBath[is.na(data_full$BsmtHalfBath)] <- 0
# FullBath
data_full$FullBath <- as.numeric(data_full$FullBath)
# HalfBath
data_full$HalfBath <- as.numeric(data_full$HalfBath)
# Bedroom
data_full <- data_full %>%
rename(Bedroom = BedroomAbvGr)
data_full$Bedroom <- as.numeric(data_full$Bedroom)
# Kitchen
data_full <- data_full %>%
rename(Kitchen = KitchenAbvGr)
data_full$Kitchen <- as.numeric(data_full$Kitchen)
# KitchenQual
data_full$KitchenQual <- as.factor(data_full$KitchenQual)
data_full$KitchenQual[is.na(data_full$KitchenQual)] <- "TA"
data_full$KitchenQual <- plyr::revalue(data_full$KitchenQual, c("Fa" = "1",
"TA" = "2",
"Gd" = "3",
"Ex" = "4"))
data_full$KitchenQual <- as.numeric(data_full$KitchenQual)
# data_full <- data_full %>%
#   mutate(KitchenQual = ordered(KitchenQual, levels = c(1:4)))
# TotRmsAbvGrd
data_full$TotRmsAbvGrd <- as.numeric(data_full$TotRmsAbvGrd)
# Functional
data_full$Functional[is.na(data_full$Functional)] <- "Typ"
data_full$Functional <- as.factor(data_full$Functional)
# Fireplaces
data_full$Fireplaces <- as.numeric(data_full$Fireplaces)
# FireplaceQu
data_full$FireplaceQu[is.na(data_full$FireplaceQu)] <- "0" # "None"
data_full$FireplaceQu <- plyr::revalue(data_full$FireplaceQu, c("Ex" = "6",
"Gd" = "5",
"TA" = "4",
"Fa" = "3",
"Po" = "2"))
data_full$FireplaceQu <- as.numeric(data_full$FireplaceQu)
# data_full <- data_full %>%
#   mutate(FireplaceQu = ordered(FireplaceQu, levels = c("None", 2:6)))
# GarageType
data_full$GarageType[is.na(data_full$GarageType)] <- "None"
data_full$GarageType <- as.factor(data_full$GarageType)
# GarageYrBlt becomes GarageDecadeBuilt
data_full <- data_full %>%
mutate(GarageYrBlt = replace(GarageYrBlt, GarageYrBlt == 2207, 2007))
data_full$GarageYrBlt[is.na(data_full$GarageYrBlt)] <- 0
data_full <- data_full %>%
mutate(GarageDecadeBuilt = cut(GarageYrBlt,
breaks = c(-Inf, 0,
1895, 1905,
1915, 1925,
1935, 1945,
1955, 1965,
1975, 1985,
1995, 2005,
2010),
labels = c("None", 1:13)))
# GarageFinish
data_full$GarageFinish[is.na(data_full$GarageFinish)] <- "None"
data_full$GarageFinish <- as.factor(data_full$GarageFinish)
# GarageCars
data_full$GarageCars[is.na(data_full$GarageCars)] <- 0
# GarageArea
data_full$GarageArea[is.na(data_full$GarageArea)] <- 0
# GarageQual
data_full$GarageQual[is.na(data_full$GarageQual)] <- "0" # "None"
data_full$GarageQual <- plyr::revalue(data_full$GarageQual, c("Ex" = "6",
"Gd" = "5",
"TA" = "4",
"Fa" = "3",
"Po" = "2"))
data_full$GarageQual <- as.numeric(data_full$GarageQual)
# data_full <- data_full %>%
#   mutate(GarageQual = ordered(GarageQual, levels = c("None", 2:6)))
# GarageCond
data_full$GarageCond[is.na(data_full$GarageCond)] <- "0" # "None"
data_full$GarageCond <- plyr::revalue(data_full$GarageCond, c("Ex" = "6",
"Gd" = "5",
"TA" = "4",
"Fa" = "3",
"Po" = "2"))
data_full$GarageCond <- as.numeric(data_full$GarageCond)
# data_full <- data_full %>%
#   mutate(GarageCond = ordered(GarageCond, levels = c("None", 2:6)))
# PavedDrive
data_full$PavedDrive <- as.factor(data_full$PavedDrive)
# WoodDeckSF
data_full$WoodDeckSF <- as.numeric(data_full$WoodDeckSF)
# OpenPorchSF
data_full$OpenPorchSF <- as.numeric(data_full$OpenPorchSF)
# EncolsedPorch
data_full$EnclosedPorch <- as.numeric(data_full$EnclosedPorch)
# ThreeSeasonPorchSF
data_full <- data_full %>%
rename(ThreeSeasonPorch = X3SsnPorch)
data_full$ThreeSeasonPorch <- as.numeric(data_full$ThreeSeasonPorch)
# ScreenPorch
data_full$ScreenPorch <- as.numeric(data_full$ScreenPorch)
# PoolArea
data_full$PoolArea <- as.numeric(data_full$PoolArea)
# PoolQC
data_full$PoolQC <- as.factor(data_full$PoolQC)
# Fence
data_full$Fence[is.na(data_full$Fence)] <- "None"
data_full$Fence <- as.factor(data_full$Fence)
# MiscFeature
data_full$MiscFeature[is.na(data_full$MiscFeature)] <- "None"
data_full$MiscFeature <- as.factor(data_full$MiscFeature)
# MiscVal
data_full$MiscVal <- as.numeric(data_full$MiscVal)
# MoSold
data_full$MoSold <- as.factor(data_full$MoSold)
# YrSold
data_full$YrSold <- as.numeric(data_full$YrSold)
# SaleType
data_full$SaleType[is.na(data_full$SaleType)] <- "WD"
data_full$SaleType <- as.factor(data_full$SaleType)
# SaleCondition
data_full$SaleCondition <- plyr::revalue(data_full$SaleCondition, c("AdjLand" = "Combine",
"Alloca" = "Combine",
"Family" = "Combine"))
data_full$SaleCondition <- as.factor(data_full$SaleCondition)
#------------------- FEATURE ENGINEERING -------------------#
# houseAge, newHouse, StructureSF, OpenPorchSF, FeatureCount, TotalRooms, TotalBathrooms, avgRoomSize,
# PorchSF, sizeRatio, avgFeatureSize, avgBathSize, yardSize
data_full <- data_full %>%
mutate(houseAge = (YrSold + 1) - YearBuilt,
newHouse = ifelse(houseAge <= 3, 1, 0),
StructureSF = TotalBsmtSF + GrLivArea + GarageArea + WoodDeckSF +
OpenPorchSF + EnclosedPorch + ThreeSeasonPorch + ScreenPorch,
TotalBathrooms = BsmtFullBath + BsmtHalfBath + FullBath + HalfBath,
extraRooms = (TotRmsAbvGrd - Bedroom),
TotalRooms = TotalBathrooms + Bedroom + Kitchen,
FeatureCount = TotalRooms + Fireplaces + GarageCars + TotalBathrooms,
avgRoomSize = StructureSF / TotalRooms,
PorchSF = WoodDeckSF + OpenPorchSF + EnclosedPorch + ThreeSeasonPorch + ScreenPorch,
sizeRatio = StructureSF / LotArea,
avgFeatureSize = StructureSF / FeatureCount,
avgBathSize = StructureSF / TotalBathrooms,
yardSize = LotArea - (FirstFloorSF + GarageArea + PoolArea))
# medianNeighborhoodBathrooms
median_Bathrooms <- data_full %>%
select(Neighborhood, TotalBathrooms) %>%
group_by(Neighborhood) %>%
summarise(medianNeighborhoodBathrooms = median(TotalBathrooms)) %>%
select(Neighborhood, medianNeighborhoodBathrooms)
data_full <- left_join(data_full, median_Bathrooms, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodBathrooms <- as.numeric(data_full$medianNeighborhoodBathrooms)
# medianNeighborhoodPriceSF
median_priceSF <- data_full %>%
filter(dataPartition == "Train") %>%
select(Neighborhood, StructureSF, SalePrice) %>%
mutate(priceSF = SalePrice / StructureSF) %>%
group_by(Neighborhood) %>%
summarise(medianpriceSF = median(priceSF)) %>%
mutate(medianNeighborhoodPriceSF = cut(medianpriceSF, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodPriceSF)
data_full <- left_join(data_full, median_priceSF, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodPriceSF <- as.numeric(data_full$medianNeighborhoodPriceSF)
# medianNeighborhoodSalePrice
median_neighborhood_value <- data_full %>%
filter(dataPartition == "Train") %>%
select(Neighborhood, SalePrice) %>%
group_by(Neighborhood) %>%
summarise(medianSalePrice = median(SalePrice)) %>%
mutate(medianNeighborhoodSalePrice = cut(medianSalePrice, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodSalePrice)
data_full <- left_join(data_full, median_neighborhood_value, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodSalePrice <- as.numeric(data_full$medianNeighborhoodSalePrice)
# medianNeighborhoodExtraRooms
median_extraRooms <- data_full %>%
select(Neighborhood, extraRooms) %>%
group_by(Neighborhood) %>%
summarise(medianextraRooms = median(extraRooms)) %>%
mutate(medianNeighborhoodExtraRooms = cut(medianextraRooms, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodExtraRooms)
data_full <- left_join(data_full, median_extraRooms, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodExtraRooms <- as.numeric(data_full$medianNeighborhoodExtraRooms)
# medianNeighborhoodRooms
median_Rooms <- data_full %>%
select(Neighborhood, TotalRooms) %>%
group_by(Neighborhood) %>%
summarise(medianRooms = median(TotalRooms)) %>%
mutate(medianNeighborhoodRooms = cut(medianRooms, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodRooms)
data_full <- left_join(data_full, median_Rooms, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodRooms <- as.numeric(data_full$medianNeighborhoodRooms)
# medianNeighborhoodFeatureCount
median_FeatureCount <- data_full %>%
select(Neighborhood, FeatureCount) %>%
group_by(Neighborhood) %>%
summarise(medianFeatureCount = median(FeatureCount)) %>%
mutate(medianNeighborhoodFeatureCount = cut(medianFeatureCount, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodFeatureCount)
data_full <- left_join(data_full, median_FeatureCount, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodFeatureCount <- as.numeric(data_full$medianNeighborhoodFeatureCount)
# medianNeighborhoodStructureSF
median_Structure_SF <- data_full %>%
select(Neighborhood, StructureSF) %>%
group_by(Neighborhood) %>%
summarise(medianStructureSF = median(StructureSF)) %>%
mutate(medianNeighborhoodStructureSF = cut(medianStructureSF, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodStructureSF)
data_full <- left_join(data_full, median_Structure_SF, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodStructureSF <- as.numeric(data_full$medianNeighborhoodStructureSF)
# medianNeighborhoodSizeRatio
median_SizeRatio <- data_full %>%
select(Neighborhood, sizeRatio) %>%
group_by(Neighborhood) %>%
summarise(medianSizeRatio = median(sizeRatio)) %>%
mutate(medianNeighborhoodsizeRatio = cut(medianSizeRatio, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodsizeRatio)
data_full <- left_join(data_full, median_SizeRatio, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodsizeRatio <- as.numeric(data_full$medianNeighborhoodsizeRatio)
# medianNeighborhoodLotArea
median_LotArea <- data_full %>%
select(Neighborhood, LotArea) %>%
group_by(Neighborhood) %>%
summarise(medianLotArea = median(LotArea)) %>%
mutate(medianNeighborhoodLotArea = cut(medianLotArea, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodLotArea)
data_full <- left_join(data_full, median_LotArea, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodLotArea <- as.numeric(data_full$medianNeighborhoodLotArea)
# medianNeighborhoodOverallQual
median_OverallQual <- data_full %>%
select(Neighborhood, OverallQual) %>%
group_by(Neighborhood) %>%
summarise(medianOverallQual = median(OverallQual)) %>%
mutate(medianNeighborhoodOverallQual = cut(medianOverallQual, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodOverallQual)
data_full <- left_join(data_full, median_OverallQual, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodOverallQual <- as.numeric(data_full$medianNeighborhoodOverallQual)
# meanNeighborhoodOverallCond
mean_OverallCond <- data_full %>%
select(Neighborhood, OverallCond) %>%
group_by(Neighborhood) %>%
summarise(meanOverallCond = mean(OverallCond)) %>%
mutate(meanNeighborhoodOverallCond = cut(meanOverallCond, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, meanNeighborhoodOverallCond)
data_full <- left_join(data_full, mean_OverallCond, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$meanNeighborhoodOverallCond <- as.numeric(data_full$meanNeighborhoodOverallCond)
# medianNeighborhoodRoomSize
median_RoomSize <- data_full %>%
select(Neighborhood, avgRoomSize) %>%
group_by(Neighborhood) %>%
summarise(medianRoomSize = median(avgRoomSize)) %>%
mutate(medianNeighborhoodRoomSize = cut(medianRoomSize, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodRoomSize)
data_full <- left_join(data_full, median_RoomSize, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodRoomSize <- as.numeric(data_full$medianNeighborhoodRoomSize)
# medianNeighborhoodyardSize
median_yardSize <- data_full %>%
select(Neighborhood, yardSize) %>%
group_by(Neighborhood) %>%
summarise(medianYardSize = median(yardSize)) %>%
mutate(medianNeighborhoodyardSize = cut(medianYardSize, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodyardSize)
data_full <- left_join(data_full, median_yardSize, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodyardSize <- as.numeric(data_full$medianNeighborhoodyardSize)
# medianNeighborhoodAge
median_Age <- data_full %>%
select(Neighborhood, houseAge) %>%
group_by(Neighborhood) %>%
summarise(medianAge = median(houseAge)) %>%
mutate(medianNeighborhoodHouseAge = cut(medianAge, breaks = 10, labels = c(1:10))) %>%
select(Neighborhood, medianNeighborhoodHouseAge)
data_full <- left_join(data_full, median_Age, by.x = "Neighborhood", by.y = "Neighborhood")
data_full$medianNeighborhoodHouseAge <- as.numeric(data_full$medianNeighborhoodHouseAge)
# medianMSSubClassStructureSF
medianMSSubClass_StructureSF <- data_full %>%
select(MSSubClass, StructureSF) %>%
group_by(MSSubClass) %>%
summarise(medianStructureSF = median(StructureSF)) %>%
mutate(medianMSSubClassStructureSF = cut(medianStructureSF, breaks = 10, labels = c(1:10))) %>%
select(MSSubClass, medianMSSubClassStructureSF)
data_full <- left_join(data_full, medianMSSubClass_StructureSF, by.x = "MSSubClass", by.y = "MSSubClass")
data_full$medianMSSubClassStructureSF <- as.numeric(data_full$medianMSSubClassStructureSF)
# medianMSSubClassPriceSF
medianMSSubClass_PriceSF <- data_full %>%
filter(dataPartition == "Train") %>%
select(MSSubClass, StructureSF, SalePrice) %>%
mutate(priceSF = SalePrice / StructureSF) %>%
group_by(MSSubClass) %>%
summarise(medianPriceSF = median(priceSF)) %>%
mutate(medianMSSubClassPriceSF = cut(medianPriceSF, breaks = 10, labels = c(1:10))) %>%
select(MSSubClass, medianMSSubClassPriceSF)
data_full <- left_join(data_full, medianMSSubClass_PriceSF, by.x = "MSSubClass", by.y = "MSSubClass")
data_full$medianMSSubClassPriceSF <- as.numeric(data_full$medianMSSubClassPriceSF)
# medianMSSubClassSalePrice
medianMSSubClass_SalePrice <- data_full %>%
filter(dataPartition == "Train") %>%
select(MSSubClass, SalePrice) %>%
group_by(MSSubClass) %>%
summarise(medianSalePrice = median(SalePrice)) %>%
mutate(medianMSSubClassSalePrice = cut(medianSalePrice, breaks = 10, labels = c(1:10))) %>%
select(MSSubClass, medianMSSubClassSalePrice)
data_full <- left_join(data_full, medianMSSubClass_SalePrice, by.x = "MSSubClass", by.y = "MSSubClass")
data_full$medianMSSubClassSalePrice <- as.numeric(data_full$medianMSSubClassSalePrice)
# medianMSSubClassFeatureCount
medianMSSubClassFeatureCount <- data_full %>%
select(MSSubClass, FeatureCount) %>%
group_by(MSSubClass) %>%
summarise(medianFeatureCount = median(FeatureCount)) %>%
mutate(medianMSSubClassFeatureCount = cut(medianFeatureCount, breaks = 10, labels = c(1:10))) %>%
select(MSSubClass, medianMSSubClassFeatureCount)
data_full <- left_join(data_full, medianMSSubClassFeatureCount, by.x = "MSSubClass", by.y = "MSSubClass")
data_full$medianMSSubClassFeatureCount <- as.numeric(data_full$medianMSSubClassFeatureCount)
# medianMSZoningSalePrice
medianMSZoning_SalePrice <- data_full %>%
filter(dataPartition == "Train") %>%
select(MSZoning, SalePrice) %>%
group_by(MSZoning) %>%
summarise(medianSalePrice = median(SalePrice)) %>%
mutate(medianMSZoningSalePrice = cut(medianSalePrice, breaks = 10, labels = c(1:10))) %>%
select(MSZoning, medianMSZoningSalePrice)
data_full <- left_join(data_full, medianMSZoning_SalePrice, by.x = "MSZoning", by.y = "MSZoning")
data_full$medianMSZoningSalePrice <- as.numeric(data_full$medianMSZoningSalePrice)
# hasPorch
data_full$hasPorch <- ifelse(data_full$PorchSF > 0, 1, 0)
data_full$hasPorch <- as.factor(data_full$hasPorch)
# hasGarage
data_full$hasGarage <- ifelse(data_full$GarageQual == 0, 0, 1)
data_full$hasGarage <- as.factor(data_full$hasGarage)
# hasPool
data_full$hasPool <- ifelse(data_full$PoolArea == 0, 0, 1)
data_full$hasPool <- as.factor(data_full$hasPool)
# hasFireplace
data_full$hasFireplace <- ifelse(data_full$Fireplaces > 0, 1, 0)
data_full$hasFireplace <- as.factor(data_full$hasFireplace)
# hasBasement
data_full$hasBasement <- ifelse(data_full$TotalBsmtSF == 0, 0, 1)
data_full$hasBasement <- as.factor(data_full$hasBasement)
# Renovated
data_full$Renovated <- ifelse(data_full$YearRemodAdd == data_full$YearBuilt, 0, 1)
data_full$Renovated <- as.factor(data_full$Renovated)
# Convert variables to factor
data_full$Utilities <- as.factor(data_full$Utilities)
data_full$Neighborhood <- as.factor(data_full$Neighborhood)
data_full$YrSold <- as.factor(data_full$YrSold)
data_full$MoSold <- as.factor(data_full$MoSold)
# Remove PoolQC & Utilities
data_full$PoolQC <- NULL
data_full$Utilities <- NULL
str(data_full)
str(data_full[, 65:121])
data_full$SalePrice <- as.character(data_full$SalePrice)
# Standardize and log continuous variables
isNumeric <- function(x) {
any(is.numeric(x))
}
colStandard<- function(x) {
(x - min(x)) / (max(x) - min(x))
}
data_full <- data_full %>%
mutate_if(isNumeric, colStandard)
write.csv(data_full, file = "data_full.csv")
# Pull out Id and dataPartition
dataIndexVars <- data_full %>%
select(Id, dataPartition, SalePrice)
data_full <- data_full %>%
select(-c(Id, dataPartition, SalePrice))
# DummyVars for categorical
dmy.train <- dummyVars(" ~ .", data = data_full)
data_full <- data.frame(predict(dmy.train, newdata = data_full))
# Remove Near Zero Variance columns
nzv_cols <- nearZeroVar(data_full, freqCut = 99/1)
if (length(nzv_cols) > 0) data_full <- data_full[, -nzv_cols]
# Correlated Predictors
varCor <- cor(data_full)
highlyCorVar <- findCorrelation(varCor, cutoff = .9)
data_full <- data_full[, -highlyCorVar]
# Bind dataIndexVars back onto data_full
model_data <- bind_cols(dataIndexVars, data_full)
train <- model_data %>%
filter(dataPartition == "Train") %>%
select(-c(Id, dataPartition))
plot_correlation(train)
test <- model_data %>%
filter(dataPartition == "Test") %>%
select(-c(dataPartition))
test.pred <- test %>%
select(-c(Id))
# Load csv
data_full <- read.csv("data_full.csv",
header = T,
stringsAsFactors = T)
data_full$X <- NULL
data_full$MSSubClass <- as.factor(data_full$MSSubClass)
data_full$MoSold <- as.factor(data_full$MoSold)
data_full$YrSold <- as.factor(data_full$YrSold)
data_full$SalePrice <- as.numeric(data_full$SalePrice)
# Pull out Id and dataPartition
dataIndexVars <- data_full %>%
select(Id, dataPartition, SalePrice)
data_full <- data_full %>%
select(-c(Id, dataPartition, SalePrice))
# DummyVars for categorical
dmy.train <- dummyVars(" ~ .", data = data_full)
data_full <- data.frame(predict(dmy.train, newdata = data_full))
# Remove Near Zero Variance columns
nzv_cols <- nearZeroVar(data_full, freqCut = 99/1)
if (length(nzv_cols) > 0) data_full <- data_full[, -nzv_cols]
# Correlated Predictors
varCor <- cor(data_full)
highlyCorVar <- findCorrelation(varCor, cutoff = .9)
data_full <- data_full[, -highlyCorVar]
# Bind dataIndexVars back onto data_full
model_data <- bind_cols(dataIndexVars, data_full)
train <- model_data %>%
filter(dataPartition == "Train") %>%
select(-c(Id, dataPartition))
plot_correlation(train)
test <- model_data %>%
filter(dataPartition == "Test") %>%
select(-c(dataPartition))
test.pred <- test %>%
select(-c(Id))
# Create folds index for CV
set.seed(3)
cv_1_folds_1 <- createMultiFolds(train$SalePrice,
k = 5,
times = 5)
set.seed(4)
objControl <- trainControl(method = "repeatedcv",
number = 5,
repeats = 5,
search = "grid",
savePredictions = T,
index = cv_1_folds_1,
verboseIter = T)
MLP.grid <- expand.grid(layer1 = seq(1, 10, by = 1),
layer2 = seq(1, 10, by = 1),
layer3 = seq(1, 10, by = 1))
time1 <- Sys.time()
set.seed(9)
MLP.model <- train(SalePrice ~ .,
data = train,
trControl = objControl,
method = "mlpML",
metric = "RMSE",
tuneGrid = MLP.grid,
verbose = T,
preProcess = c("center", "scale"))
